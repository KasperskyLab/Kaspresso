<resources>
    <string name="app_name">Kaspresso Sample</string>

    <!-- Main Activity -->
    <string name="main_screen_title">Main Screen</string>
    <string name="main_screen_simple_fragment_button">Simple fragment</string>
    <string name="main_screen_webview_button">WebView</string>
    <string name="main_screen_scroll_view_sample_button">Flaky sample</string>
    <string name="main_screen_continuously_sample_button">Continuously sample</string>
    <string name="main_screen_complex_compose_sample_button">Complex compose sample</string>
    <string name="main_screen_idlewaiting_sample_button">Waiting for idle sample</string>
    <string name="main_screen_measure_sample_button">Measure sample</string>
    <string name="main_screen_jetpack_compose_button">Jetpack Compose samples</string>
    <string name="main_screen_shared_test">Shared Test with Robolectric sample</string>
    <string name="main_screen_device_button">Device Sample</string>
    <string name="main_screen_full_device_button">Full Window Device Sample</string>
    <string name="main_screen_change_language_mid_test_button">Change locale mid-test</string>

    <!-- Auto scroll fallback screen -->
    <string name="autoscroll_scrollview_with_padding_title">Auto scroll ScrollView with padding</string>

    <!-- Simple fragment screen -->
    <string name="simple_fragment_title">Simple Fragment</string>
    <string name="simple_fragment_text_button_1">Button 1</string>
    <string name="simple_fragment_text_button_2">Button 2</string>
    <string name="simple_fragment_text_edittext">Some text</string>

    <!-- Measure fragment screen -->
    <string name="measure_fragment_title" translatable="false">Measure Fragment</string>
    <string name="measure_fragment_text_button_1" translatable="false">BUTTON 1</string>
    <string name="measure_fragment_text_button_2" translatable="false">BUTTON 2</string>
    <string name="measure_fragment_text_textview" translatable="false">Button_2 clicks count = </string>
    <string name="measure_fragment_text_edittext" translatable="false">Some text</string>
    <string name="measure_fragment_text_checkbox" translatable="false">Checkbox</string>

    <!-- Device Sample Activity -->
    <string name="device_sample_title" translatable="false">Device Sample</string>
    <string name="device_sample_accessibility_service_title" translatable="false">Kaspresso Sample Accessibility Service</string>
    <string name="device_sample_input_hint" translatable="false">Type text here…</string>
    <string name="device_request_permission" translatable="false">Request Permission</string>

    <!-- Device Full Activity -->
    <string name="device_full_title">Device Full</string>
    <string name="device_full_start">START</string>
    <string name="device_full_end">END</string>
    <string name="device_full_show_dialog">SHOW DIALOG</string>

    <!-- Screenshooter sample test -->
    <string name="increment">Increment</string>
    <string name="decrement">Decrement</string>
    <string name="change_color_to_black">Set background to black</string>
    <string name="change_color_to_red">Set background to red</string>
    <string name="counter_value">Current value: %d</string>

    <!-- Flakysafety sample test -->
    <string name="common_flaky_final_textview" translatable="false">TextView</string>
    <string name="common_flaky_final_button" translatable="false">BUTTON</string>
    <string name="common_flaky_start_1" translatable="false">1</string>
    <string name="common_flaky_start_2" translatable="false">2</string>
    <string name="common_flaky_start_3" translatable="false">3</string>
    <string name="common_flaky_start_4" translatable="false">4</string>
    <string name="common_flaky_start_5" translatable="false">5</string>
    <string name="common_flaky_start_6" translatable="false">6</string>

    <!-- Continuously sample test -->
    <string name="continuously_start_button" translatable="false">Start some work with the success dialog at the end</string>
    <string name="continuously_dialog_title" translatable="false">Some work finished</string>

    <!-- Upgrade scenario -->
    <string name="upgrade_title" translatable="false">Upgrade scenario</string>
    <string name="upgrade_version_placeholder" translatable="false">v.%s</string>
    <string name="upgrade_value_placeholder" translatable="false">Current value is: %s</string>
    <string name="upgrade_label_value" translatable="false">Value</string>
    <string name="upgrade_value_input_hint" translatable="false">Type new value here</string>
    <string name="upgrade_apply_button" translatable="false">Apply</string>

    <!-- Complex compose scenario -->
    <string name="compose_screen_title" translatable="false">Complex compose screen</string>
    <string name="compose_screen_button_start" translatable="false">Start</string>
    <string name="compose_screen_button_stage_1" translatable="false">Stage #1</string>
    <string name="compose_screen_button_stage_2" translatable="false">Stage #2</string>
    <string name="compose_screen_button_finish" translatable="false">Finish</string>
    <string name="compose_screen_dialog_title_1" translatable="false">Dialog #1</string>
    <string name="compose_screen_dialog_title_2" translatable="false">Dialog #2</string>
    <string name="compose_screen_dialog_message" translatable="false">Some unexpected text</string>
    <string name="compose_screen_dialog_pos_button" translatable="false">OK</string>

    <!-- Idle waiting fragment screen -->
    <string name="idlewaiting_fragment_title" translatable="false">Wait for idle Fragment</string>
    <string name="idlewaiting_fragment_text_edittext" translatable="false">Some text</string>

    <!--  Change locale fragment  -->
    <string name="change_locale_screen_text">For en locale the value is 123</string>

    <string name="large_text" translatable="false">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
</resources>
