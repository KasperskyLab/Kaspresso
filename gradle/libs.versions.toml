[versions]
kotlin = "1.7.10"
detekt = "1.21.0"
espresso = "3.5.0"
kakao = "3.2.0"
kakaoCompose = "0.2.0"
allure = "2.4.0"
compose = "1.3.1"
composeCompiler = "1.3.1"
activityCompose = "1.4.0"
androidXTest = "1.5.0"
testOrchestrator = "1.4.1"
lifecycle = "2.5.1"
thirdPartyReport = "0.16.756"

[libraries]
# plugins
kotlinPlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
androidPlugin = "com.android.tools.build:gradle:7.2.2"
versionsPlugin = "com.github.ben-manes:gradle-versions-plugin:0.39.0"
thirdPartyReportPlugin = { module = "com.kaspersky.gradle:third-party-report", version.ref = "thirdPartyReport" }
airPlugin = { module = "com.kaspersky.gradle:air", version.ref = "thirdPartyReport" }

# libraries
kotlinStdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinCli = "org.jetbrains.kotlinx:kotlinx-cli:0.3.5"

detektCli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

androidXCore = "androidx.core:core:1.9.0"
appcompat = "androidx.appcompat:appcompat:1.5.1"
material = "com.google.android.material:material:1.6.1"
constraint = "androidx.constraintlayout:constraintlayout:2.1.4"
multidex = "androidx.multidex:multidex:2.0.1"

lifecycleViewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycleLiveDataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycleViewModelComposeKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

okhttp = "com.squareup.okhttp3:okhttp:4.10.0"
gson = "com.google.code.gson:gson:2.9.1"
kotson = "com.github.salomonbrys.kotson:kotson:2.5.0"

espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espressoWeb = { module = "androidx.test.espresso:espresso-web", version.ref = "espresso" }
# Workaround for https://github.com/android/android-test/issues/861
accessibilityFramework = "com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:4.0.0"
uiAutomator = "androidx.test.uiautomator:uiautomator:2.2.0"
robolectric = "org.robolectric:robolectric:4.8.2"
kakao = { module = "io.github.kakaocup:kakao", version.ref = "kakao" }
kakaoCompose = { module = "io.github.kakaocup:compose", version.ref = "kakaoCompose" }
junit = "junit:junit:4.13.2"
junitJupiter = "org.junit.jupiter:junit-jupiter:5.9.0"
truth = "com.google.truth:truth:1.1.3"

androidXTestCore = { module = "androidx.test:core", version.ref = "androidXTest" }
androidXTestRules = { module = "androidx.test:rules", version.ref = "androidXTest" }
androidXTestRunner = { module = "androidx.test:runner", version.ref = "androidXTest" }
androidXTestFragmentTesting = "androidx.fragment:fragment-testing:1.5.4"
androidXTestOrchestrator = { module = "androidx.test:orchestrator", version.ref = "testOrchestrator" }
androidXTestExtJunit = "androidx.test.ext:junit:1.1.4"
androidXTestExtJunitKtx = "androidx.test.ext:junit-ktx:1.1.4"
androidXLifecycleRuntimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

composeCompiler = { module = "androidx.compose.compiler:compiler", version.ref="composeCompiler" }
composeActivity = "androidx.activity:activity-compose:1.5.1"
composeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }
composeTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
composeRuntimeLiveData = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
composeNavigation = "androidx.navigation:navigation-compose:2.5.2"

composeUiTest = { module = "androidx.compose.ui:ui-test", version.ref = "compose" }
composeUiTestJunit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }

allureKotlinModel = { module = "io.qameta.allure:allure-kotlin-model", version.ref = "allure" }
allureKotlinCommons = { module = "io.qameta.allure:allure-kotlin-commons", version.ref = "allure" }
allureKotlinJunit4 = { module = "io.qameta.allure:allure-kotlin-junit4", version.ref = "allure" }
allureKotlinAndroid = { module = "io.qameta.allure:allure-kotlin-android", version.ref = "allure" }

[bundles]
espresso = ["espressoCore", "espressoWeb", "accessibilityFramework"]
allure = ["allureKotlinModel", "allureKotlinCommons", "allureKotlinJunit4", "allureKotlinAndroid"]
compose = ["composeActivity", "composeUiTooling", "composeMaterial", "composeTestManifest", "composeCompiler"]
